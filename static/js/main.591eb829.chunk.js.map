{"version":3,"sources":["UseMemo/UseMemo.module.css","UseRef.module.css","UseCallback/UseRef.module.css","Lists.js","UseEffect.jsx","UseRef.jsx","UseRefTimer.jsx","UseMemo/Count.jsx","UseMemo/IsFive.jsx","UseMemo/UseMemo.jsx","UseCallbackCount/Buttons.jsx","UseCallbackCount/UseCallbackCount.jsx","UseCallback/UseCallback.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Lists","to","UseEffect","useState","numbers","setNumbers","count","setCount","useEffect","console","log","onClick","map","num","index","randNumber","Math","round","random","UseRef","ulRef","useRef","handleScroll","ul","current","addEventListener","removeEventListener","className","styles","list","ref","length","UseRefTimer","timerRef","addNumber","prev","setInterval","clearInterval","render","count1","count2","Count","React","memo","id","value","cyan","rerender","IsFive","getResult","useMemo","i","prevPops","nextProps","UseMemo","setCount1","setCount2","theme","counter","Buttons","onPlus","onMinus","UseCallbackCount","useCallback","UseCallback","numbersRef","start","stop","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.591eb829.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"UseMemo_theme__VWWwq\",\"counter\":\"UseMemo_counter__3Ljru\",\"cyan\":\"UseMemo_cyan__ZaFhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"UseRef_list__1RVtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"UseRef_list__rl-DI\"};","import { NavLink } from \"react-router-dom\"\r\n\r\nconst Lists = () => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <NavLink to='useEffect'> useEffect</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='useRef'> useRef</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='useRefTimer'> useRefTimer</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='useMemo'> useMemo</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='useCallback'> useCallback</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='useCallbackCount'> useCallbackCount</NavLink>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Lists;","import { useEffect, useState } from \"react\"\r\nimport React from \"react\";\r\n\r\n/* class UseEffect extends React.Component{\r\n    state = {\r\n        numbers: [1, 2, 3, 4],\r\n        count: 0\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log('Отобразился')\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('Обновился')\r\n    }\r\n    componentWillUnmount(){\r\n        console.log ('Удален')\r\n    }\r\n    addNumber = () => {\r\n        let randNumber  = Math.round(Math.random() *100)\r\n        this.setState(\r\n            {numbers: [...this.state.numbers, randNumber]} \r\n        )\r\n    }\r\n    render(){\r\n       return (\r\n            <> \r\n            <h1>{count}</h1>\r\n                <button onClick={()=> this.setState({count: this.state.count + 1})}>+</button>\r\n                <ul>\r\n                    {this.state.numbers.map((num, index) => <li key={index}>{num}</li>)}\r\n                </ul>\r\n                <button onClick={() => this.addNumber()}>Новое число</button>\r\n            </>\r\n        )\r\n    }\r\n} */\r\n\r\n\r\n\r\nconst UseEffect = () => {\r\n    const [numbers, setNumbers] = useState([1, 2, 3, 4])\r\n    const [count, setCount] = useState(0)\r\n    const addNumber = () => {\r\n        let randNumber = Math.round(Math.random() * 100)\r\n        setNumbers(\r\n\r\n            [...numbers, randNumber]\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('Отобразился')\r\n        return () => {\r\n            console.log('Удален')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('Обновился count')\r\n    }, [count])\r\n\r\n    useEffect(() => {\r\n        console.log('Обновился number')\r\n    }, [numbers])\r\n    return (\r\n        <>\r\n            <h1>{count}</h1>\r\n            <button onClick={()=> setCount(count + 1)}>+</button>\r\n            <ul>\r\n                {numbers.map((num, index) => <li key={index}>{num}</li>)}\r\n            </ul>\r\n            <button onClick={addNumber}>Новое число</button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UseEffect;","import { useEffect, useRef, useState } from \"react\"\r\nimport React from \"react\";\r\nimport styles from './UseRef.module.css'\r\n\r\nconst UseRef = () => {\r\n    const [numbers, setNumbers] = useState([1, 2, 3, 4,1, 2, 3, 4,1, 2, 3, 4,1, 2, 3, 4])\r\n\r\n    const ulRef = useRef();\r\n    const addNumber = () => {\r\n        setNumbers(\r\n            [...numbers, numbers.length + 1]\r\n        )\r\n    };\r\n\r\n    const handleScroll = ()=> {\r\n        console.log('скролл')\r\n    }\r\n    useEffect(() => {\r\n        console.log(111)\r\n        let ul = ulRef.current;\r\n        ul.addEventListener('scroll', handleScroll)\r\n        return () => {\r\n          ul.removeEventListener('scroll', handleScroll)\r\n        }\r\n    });\r\n\r\n    const removeScroll = () => {\r\n        ulRef.current.removeEventListener('scroll', handleScroll)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.list}>\r\n                <ul ref={ulRef}>\r\n                    {numbers.map((num, index) => <li key={index}>{num}</li>)}\r\n                </ul>\r\n                <div>\r\n                    <button onClick={addNumber}>Новое число</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={removeScroll}>не считсвать скролл</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UseRef;","import { useRef, useState } from \"react\"\r\nimport React from \"react\";\r\nimport styles from './UseRef.module.css'\r\n\r\nconst UseRefTimer = () => {\r\n    const [numbers, setNumbers] = useState([1, 2, 3, 4])\r\n\r\n    const ulRef = useRef();\r\n    const timerRef = useRef();\r\n    const addNumber = () => {\r\n        \r\n        setNumbers( (prev)=>\r\n            [...prev, prev.length + 1]\r\n        )\r\n    };\r\n\r\n    const start = () => {\r\n        timerRef.current = setInterval(addNumber, 1000)\r\n    }\r\n\r\n    const stop = () => {\r\n        clearInterval(timerRef.current)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.list}>\r\n                <ul ref={ulRef}>\r\n                    {numbers.map((num, index) => <li key={index}>{num}</li>)}\r\n                </ul>\r\n                <div>\r\n                    <button onClick={addNumber}>Новое число</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={start}>start</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={stop}>stop</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UseRefTimer;","import React from \"react\"\r\nimport styles from './UseMemo.module.css'\r\n\r\nconst render = {\r\n    count1: 0,\r\n    count2: 0,\r\n}\r\n\r\n\r\nconst Count =  React.memo(({ id, value }) => {\r\n    \r\n    console.log (`Count${id} render: ${++render[`count${id}`]}`)\r\n    return (\r\n        <div>\r\n            <h1 className={styles.cyan}>\r\n                {value}\r\n            </h1>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Count;","import React, { useMemo } from \"react\";\r\n\r\n\r\nlet rerender = 0;\r\nconst IsFive = React.memo(\r\n    ({ value }) => {\r\n    console.log(`is five render: ${++rerender}`)\r\n    const getResult = useMemo(() => {\r\n        let i = 0;\r\n        while (i < 600000000) i++;\r\n        return value === 5 ? 'Введено 5' : \"Введено не 5\"\r\n    }, [value]);\r\n\r\n    return (\r\n        <h3>\r\n            {getResult}\r\n        </h3>\r\n    )},\r\n        (prevPops, nextProps) => {\r\n\r\n            if (nextProps.value === 5) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        },\r\n    )\r\nexport default IsFive;","import React from 'react';\r\nimport Count from './Count';\r\nimport IsFive from './IsFive';\r\nimport styles from './UseMemo.module.css'\r\n\r\nconst UseMemo = () =>  {\r\n  const [count1, setCount1] = React.useState(0);\r\n  const [count2, setCount2] = React.useState(0);\r\n\r\n  return (\r\n    <div className={styles.theme}>\r\n      \r\n      <h5>Счетчик 1: </h5>\r\n      <div className={styles.counter}>\r\n        <button onClick={() => setCount1(count1 + 1)}>+</button>\r\n        <Count id={1} value={count1} />\r\n      </div>\r\n\r\n      <h5>Счетчик 2: </h5>\r\n      <div className={styles.counter}>\r\n        <button onClick={() => setCount2(count2 + 1)}>+</button>\r\n        <Count id={2} value={count2} />\r\n        <IsFive value={count2} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UseMemo;\r\n","import React from \"react\";\r\nconst Buttons = React.memo(({onPlus, onMinus}) => {\r\nconsole.log('render')\r\nreturn (\r\n    <div>\r\n        <button onClick={onPlus}>+</button>\r\n        <button onClick={onMinus}>-</button>\r\n    </div>\r\n)\r\n\r\n})\r\n\r\nexport default Buttons;","import { useCallback, useState } from \"react\";\r\nimport Buttons from \"./Buttons\";\r\n\r\n\r\nconst UseCallbackCount = () => {\r\n\r\n    const [count, setCount] = useState(0)\r\n    const onPlus = useCallback(() => {\r\n        setCount(count => count + 1)\r\n    },[])\r\n    const onMinus = useCallback(() => {\r\n        setCount(count => count - 1)\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            111111111\r\n            <div>{count}</div>\r\n            <Buttons onPlus={onPlus} onMinus={onMinus} />\r\n        </div>\r\n         \r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UseCallbackCount;","import { useCallback, useRef, useState } from \"react\"\r\nimport React from \"react\";\r\nimport styles from './UseRef.module.css'\r\n\r\nconst UseCallback = () => {\r\n    const [numbers, setNumbers] = useState([1, 2, 3, 4,1, 2, 3, 4,1, 2, 3, 4,1, 2, 3, 4])\r\n\r\n    const ulRef = useRef();\r\n    const numbersRef = useRef();\r\n    const addNumber = () => {\r\n        setNumbers(\r\n            [...numbers, numbers.length + 1]\r\n        )\r\n    };\r\n\r\n    numbersRef.current=numbers\r\n\r\n    const handleScroll = ()=> {\r\n        console.log('скролл', numbersRef.current)\r\n    }\r\n\r\n\r\n    const start = useCallback(() => {\r\n        ulRef.current.addEventListener('scroll', handleScroll)   \r\n    },[])\r\n    const stop = useCallback(() => {\r\n        ulRef.current.removeEventListener('scroll', handleScroll)   \r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.list}>\r\n                <ul ref={ulRef}>\r\n                    {numbers.map((num, index) => <li key={index}>{num}</li>)}\r\n                </ul>\r\n                <div>\r\n                    <button onClick={addNumber}>Новое число</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={start}>считсвать скролл</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={stop}>не считсвать скролл</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UseCallback;","/* import { useState } from 'react'; */\nimport Lists from './Lists';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport UseEffect from './UseEffect';\nimport UseRef from './UseRef'\nimport UseRefTimer from './UseRefTimer';\nimport UseMemo from './UseMemo/UseMemo';\nimport UseCallbackCount from './UseCallbackCount/UseCallbackCount';\nimport UseCallback from './UseCallback/UseCallback';\n\n\n\nconst App = () => {\n \n  return (\n    <BrowserRouter>\n      <div className='app-wrapper'>\n        <Lists />\n        <Route path = {'/UseEffect'} render={()=> <UseEffect />}></Route>\n        <Route path = {'/UseRef'} render={()=> <UseRef />}></Route>\n        <Route path = {'/UseRefTimer'} render={()=> <UseRefTimer />}></Route>\n        <Route path = {'/UseMemo'} render={()=> <UseMemo />}></Route>\n        <Route path = {'/UseCallback'} render={()=> <UseCallback />}></Route>\n        <Route path = {'/UseCallbackCount'} render={()=> <UseCallbackCount />}></Route>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n\n/* const [visibleList, setVisibleList] = useState(true)\n       {visibleList && <List />}\n        <button onClick={() => setVisibleList(visible => !visible)}>Visible/Unvisible</button> */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n/*   <React.StrictMode> */\n    <App />\n  /* </React.StrictMode> */,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}